{"version":3,"file":"index.2d449231.js","sources":["../../../../node_modules/nuxt/dist/app/composables/asyncData.mjs","../../../../node_modules/nuxt/dist/app/composables/fetch.mjs","../../../../components/ImageComponent.vue","../../../../components/WeatherComponent.vue","../../../../components/SearchBar.vue","../../../../components/ClockComponent.vue","../../../../components/DateComponent.vue","../../../../components/EditLinkModal.vue","../../../../components/ContextMenu.vue","../../../../components/LinkBadge.vue","../../../../assets/plex.jpg","../../../../components/PlexSessionsComponent.vue","../../../../composables/useGreetingText.ts","../../../../pages/index.vue"],"sourcesContent":["import { onBeforeMount, onServerPrefetch, onUnmounted, ref, getCurrentInstance, watch, unref } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.mjs\";\nconst getDefault = () => null;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  let [key, handler, options = {}] = args;\n  if (typeof key !== \"string\") {\n    throw new TypeError(\"[nuxt] [asyncData] key must be a string.\");\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [asyncData] handler must be a function.\");\n  }\n  options.server = options.server ?? true;\n  options.default = options.default ?? getDefault;\n  if (options.defer) {\n    console.warn(\"[useAsyncData] `defer` has been renamed to `lazy`. Support for `defer` will be removed in RC.\");\n  }\n  options.lazy = options.lazy ?? options.defer ?? false;\n  options.initialCache = options.initialCache ?? true;\n  options.immediate = options.immediate ?? true;\n  const nuxt = useNuxtApp();\n  const useInitialCache = () => (nuxt.isHydrating || options.initialCache) && nuxt.payload.data[key] !== void 0;\n  if (!nuxt._asyncData[key]) {\n    nuxt._asyncData[key] = {\n      data: ref(useInitialCache() ? nuxt.payload.data[key] : options.default?.() ?? null),\n      pending: ref(!useInitialCache()),\n      error: ref(nuxt.payload._errors[key] ?? null)\n    };\n  }\n  const asyncData = { ...nuxt._asyncData[key] };\n  asyncData.refresh = asyncData.execute = (opts = {}) => {\n    if (nuxt._asyncDataPromises[key]) {\n      if (opts.dedupe === false) {\n        return nuxt._asyncDataPromises[key];\n      }\n      nuxt._asyncDataPromises[key].cancelled = true;\n    }\n    if (opts._initial && useInitialCache()) {\n      return nuxt.payload.data[key];\n    }\n    asyncData.pending.value = true;\n    const promise = new Promise(\n      (resolve, reject) => {\n        try {\n          resolve(handler(nuxt));\n        } catch (err) {\n          reject(err);\n        }\n      }\n    ).then((result) => {\n      if (promise.cancelled) {\n        return nuxt._asyncDataPromises[key];\n      }\n      if (options.transform) {\n        result = options.transform(result);\n      }\n      if (options.pick) {\n        result = pick(result, options.pick);\n      }\n      asyncData.data.value = result;\n      asyncData.error.value = null;\n    }).catch((error) => {\n      if (promise.cancelled) {\n        return nuxt._asyncDataPromises[key];\n      }\n      asyncData.error.value = error;\n      asyncData.data.value = unref(options.default?.() ?? null);\n    }).finally(() => {\n      if (promise.cancelled) {\n        return;\n      }\n      asyncData.pending.value = false;\n      nuxt.payload.data[key] = asyncData.data.value;\n      if (asyncData.error.value) {\n        nuxt.payload._errors[key] = true;\n      }\n      delete nuxt._asyncDataPromises[key];\n    });\n    nuxt._asyncDataPromises[key] = promise;\n    return nuxt._asyncDataPromises[key];\n  };\n  const initialFetch = () => asyncData.refresh({ _initial: true });\n  const fetchOnServer = options.server !== false && nuxt.payload.serverRendered;\n  if (process.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    onServerPrefetch(() => promise);\n  }\n  if (process.client) {\n    const instance = getCurrentInstance();\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      if (instance) {\n        onBeforeMount(() => {\n          cbs.forEach((cb) => {\n            cb();\n          });\n          cbs.splice(0, cbs.length);\n        });\n        onUnmounted(() => cbs.splice(0, cbs.length));\n      }\n    }\n    if (fetchOnServer && nuxt.isHydrating && key in nuxt.payload.data) {\n      asyncData.pending.value = false;\n    } else if (instance && (nuxt.payload.serverRendered && nuxt.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    if (options.watch) {\n      watch(options.watch, () => asyncData.refresh());\n    }\n    const off = nuxt.hook(\"app:data:refresh\", (keys) => {\n      if (!keys || keys.includes(key)) {\n        return asyncData.refresh();\n      }\n    });\n    if (instance) {\n      onUnmounted(off);\n    }\n  }\n  const asyncDataPromise = Promise.resolve(nuxt._asyncDataPromises[key]).then(() => asyncData);\n  Object.assign(asyncDataPromise, asyncData);\n  return asyncDataPromise;\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options] = args;\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nexport function refreshNuxtData(keys) {\n  if (process.server) {\n    return Promise.resolve();\n  }\n  const _keys = keys ? Array.isArray(keys) ? keys : [keys] : void 0;\n  return useNuxtApp().callHook(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : Array.isArray(keys) ? keys : [keys];\n  for (const key of _keys) {\n    if (key in nuxtApp.payload.data) {\n      nuxtApp.payload.data[key] = void 0;\n    }\n    if (key in nuxtApp.payload._errors) {\n      nuxtApp.payload._errors[key] = void 0;\n    }\n    if (nuxtApp._asyncData[key]) {\n      nuxtApp._asyncData[key].data.value = void 0;\n      nuxtApp._asyncData[key].error.value = void 0;\n      nuxtApp._asyncData[key].pending.value = false;\n    }\n    if (key in nuxtApp._asyncDataPromises) {\n      nuxtApp._asyncDataPromises[key] = void 0;\n    }\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\n","import { computed, unref } from \"vue\";\nimport { useAsyncData } from \"./asyncData.mjs\";\nexport function useFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  const _key = opts.key || autoKey;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useFetch] key must be a string: \" + _key);\n  }\n  if (!request) {\n    throw new Error(\"[nuxt] [useFetch] request is missing.\");\n  }\n  const key = \"$f\" + _key;\n  const _request = computed(() => {\n    let r = request;\n    if (typeof r === \"function\") {\n      r = r();\n    }\n    return unref(r);\n  });\n  const {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    watch,\n    initialCache,\n    immediate,\n    ...fetchOptions\n  } = opts;\n  const _fetchOptions = {\n    ...fetchOptions,\n    cache: typeof opts.cache === \"boolean\" ? void 0 : opts.cache\n  };\n  const _asyncDataOptions = {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    initialCache,\n    immediate,\n    watch: [\n      _request,\n      ...watch || []\n    ]\n  };\n  let controller;\n  const asyncData = useAsyncData(key, () => {\n    controller?.abort?.();\n    controller = typeof AbortController !== \"undefined\" ? new AbortController() : {};\n    return $fetch(_request.value, { signal: controller.signal, ..._fetchOptions });\n  }, _asyncDataOptions);\n  return asyncData;\n}\nexport function useLazyFetch(request, arg1, arg2) {\n  const [opts, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  return useFetch(\n    request,\n    {\n      ...opts,\n      lazy: true\n    },\n    autoKey\n  );\n}\n","<template>\n  <div style=\"max-height: 100%;\" class=\"rounded-3xl max-h-[calc(30vh)] flex justify-items-center items-center\">\n    <img class=\"w-100 h-100 object-contain rounded-3xl\" :style=\"`opacity: ${imageOpacity / 100}`\" @load=\"loading = false\" :src=\"image\" alt=\"image\" />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useSettingsStore } from '@/stores/settings'\n\nconst images = ['https://mj-gallery.com/2812b085-5451-4cfe-a511-b797a8adb6fb/grid_0.png',\n'https://mj-gallery.com/0edf827b-e308-4521-ba93-90e498cfe48b/grid_0.png',\n'https://mj-gallery.com/271d74ce-349e-4865-a18e-0438845a0bb4/grid_0.png',\n'https://mj-gallery.com/b79206ba-8edf-4dec-bd47-e7fb3bc0d368/grid_0.png',\n'https://mj-gallery.com/7bf4774a-985d-4244-a46d-d05c859b6920/grid_0.png',\n'https://mj-gallery.com/62308fbb-5274-421d-b7ae-84b89e249428/grid_0.png',\n'https://mj-gallery.com/62d7898a-0d04-41b2-8091-f08576a643f8/grid_0.png',\n'https://mj-gallery.com/83283aaa-44db-4f5c-b5e9-8a5aa5559a9d/grid_0.png',\n'https://mj-gallery.com/f7b965ff-71eb-4e75-b788-1651c20cdcd5/grid_0.png',\n'https://mj-gallery.com/c4bd6b31-5824-4f86-a6a1-9c4408f7c091/grid_0.png',\n'https://mj-gallery.com/c30016e1-ca57-4b19-840b-21b5e9c05a83/grid_0.png',\n'https://mj-gallery.com/b2f7ecab-725a-476b-9e6d-d08f535f0d4e/grid_0.png',\n'https://mj-gallery.com/47ef2540-f911-41f6-8a68-75b49be79a2d/grid_0.png',\n'https://mj-gallery.com/f2e9fd82-a879-4c63-8827-a0e316d669f9/grid_0.png',\n'https://mj-gallery.com/473c2fdd-8207-4ddb-bd20-ffa0833cdca2/grid_0.png',\n'https://mj-gallery.com/8009e2a6-062a-4057-bbf6-bdcb0508d558/grid_0.png',\n'https://mj-gallery.com/b0129365-3bac-453b-a198-9bc3ce176b98/grid_0.png',\n'https://mj-gallery.com/0c6b3646-c95e-4e10-b486-3276c2cd0a7b/grid_0.png',\n]\n\nconst store = useSettingsStore()\n\nconst getImageOrRandom = () => {\n  if (store.image !== '') {\n    return store.image\n  } else {\n    return images[Math.floor(Math.random() * images.length)]\n  }\n}\n\nconst image = ref<string>(getImageOrRandom())\nconst loading = ref<boolean>(true)\nconst imageOpacity = ref(store.getImageOpacity)\n\nwatch(\n  () => store.image,\n  () => {\n    image.value = getImageOrRandom()\n  }\n)\n\nwatch(\n  () => store.imageOpacity,\n  () => {\n    imageOpacity.value = store.getImageOpacity\n  }\n)\n\n</script>","<template>\n  <div v-if=\"loaded\" class=\"flex flex-row justify-items-center items-center capitalize space-x-4\">\n    <img :src=\"iconURL\" alt=\"Weather icon\">\n    <div>\n      <p>{{ weatherData.weather[0].description }}</p>\n      <p class=\"opacity-50\">{{ weatherData.name }}</p>\n    </div>\n    <div class=\"flex flex-row place-content-start items-start\">\n      <span class=\"text-2xl\">{{ parseInt(weatherData.main.temp) }}</span>\n      <span class=\"text-sm\">°C</span>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useWeatherStore } from '~~/stores/weather'\nconst weatherStore = useWeatherStore()\n\nconst token = ref(computed(() => weatherStore.token))\nconst lat = ref(computed(() => weatherStore.lat))\nconst lon = ref(computed(() => weatherStore.lon))\n\nconst weatherData = ref(null)\nconst iconURL = ref('')\nconst loaded = ref(false)\n\nconst getWeather = async () => {\n  if(token.value) {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?'\n    const { data } = await useFetch(`${url}lat=${lat.value}&lon=${lon.value}&appid=${token.value}&units=metric`)\n\n    weatherData.value = data.value\n    iconURL.value = \"http://openweathermap.org/img/w/\" + weatherData.value.weather[0].icon + \".png\"\n    loaded.value = true\n  }\n}\n\nonMounted(() => {\n  getWeather()\n})\n\nwatch(() => weatherStore.token, () => {\n  getWeather()\n})\nwatch(() => weatherStore.lat, () => {\n  getWeather()\n})\nwatch(() => weatherStore.lon, () => {\n  getWeather()\n})\n\n// Update weather every 10 minutes\nsetInterval(() => {\n  getWeather()\n}, 600000)\n\n\n\n</script>","<template>\n  <div>\n    <span class=\"text-xs ml-6 opacity-30\">Search:</span>\n    <div class=\"flex flex-row items-center p-2 rounded-full bg-neutral glass opacity-75 border-0 hover:bg-neutral hover:opacity-60 transition-all\">\n      <input autofocus ref=\"search\" v-model=\"input\" type=\"text\" class=\"ml-4 text-start text-neutral-content bg-transparent border-none appearance-none outline-none focus:outline-none text-3xl font-bold w-full\" @keyup.enter=\"searchGoogle\">\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nconst input = ref<string>('')\nconst search = ref(null)\n\nconst searchGoogle = (e) => {\n  // check if button presed is enter\n  if (e.keyCode === 13) {\n    // check if input is empty\n    if (input.value !== '') {\n      location.href = `https://google.com/search?q=${input.value}`\n    }\n  }\n}\n\n</script>","<template>\n  <span class=\"countdown font-mono text-6xl p-0 text-primary\">\n    <span ref=\"hours\"></span>:\n    <span ref=\"minutes\"></span>:\n    <span ref=\"seconds\"></span>\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\n\nconst hours = ref(null)\nconst minutes = ref(null)\nconst seconds = ref(null)\n\nconst updateTime = () => {\n  const now = new Date()\n  const _hours = now.getHours()\n  const _minutes = now.getMinutes()\n  const _seconds = now.getSeconds()\n\n  hours.value.style = _hours < 10 ? `--value: 0${_hours}` : `--value: ${_hours.toString()}`\n  minutes.value.style = _minutes < 10 ? `--value: 0${_minutes}` : `--value: ${_minutes.toString()}`\n  seconds.value.style = _seconds < 10 ? `--value: 0${_seconds}` : `--value: ${_seconds.toString()}`\n}\n\nsetInterval(updateTime, 500)\n\n</script>","<template>\n  <p class=\"text-xl\" ref=\"dateRef\">{{dateString}}</p>\n</template>\n\n<script lang=\"ts\" setup>\nconst dateRef = ref(null)\n\nconst formatDate = () => {\n  const today = new Date()\n  const weekDay = today.toLocaleString('en-us', { weekday: 'long' })\n  const day = today.getDate()\n\n  return `${weekDay} ${day}`\n}\n\nconst dateString = computed(() => {\n  return formatDate()\n})\n\n</script>","<template>\n  <ModalComponent :open=\"true\" confirm=\"Save\" cancel=\"Cancel\" :onClose=\"onClose\" :onConfirm=\"saveLink\">\n    <template v-slot:title>\n      Edit <span class=\"font-bold\">{{ link.name }}</span>\n    </template>\n    <template v-slot:form>\n      <label class=\"label\">\n        <span class=\"label-text\">Link name</span>\n        </label>\n        <input v-model=\"name\" type=\"text\" placeholder=\"(ex. Github)\" class=\"input input-bordered w-full max-w-xs\" >\n        <label class=\"label\">\n          <span class=\"label-text\">Link url</span>\n        </label>\n        <input v-model=\"url\"  type=\"text\" placeholder=\"(ex. https://github.com)\" class=\"input input-bordered w-full max-w-xs\" >\n        <label class=\"label\">\n          <span class=\"label-text\">Group</span>\n        </label>\n        <input v-model=\"group\"  type=\"text\" placeholder=\"(ex. Productivity)\" class=\"input input-bordered w-full max-w-xs\" >\n        <div class=\"mt-2 flex flex-row flex-wrap\">\n          <span v-for=\"g in groups\" class=\"badge cursor-pointer mr-1 mb-1\" @click=\"group = g\">{{g}}</span>\n        </div>\n        <label class=\"label\">\n          <span class=\"label-text\">Color</span>\n        </label>\n        <input v-model=\"color\" type=\"text\" placeholder=\"(ex. #FFF000)\" class=\"input input-bordered w-full max-w-xs\" >\n\n        <div class=\"mt-2 flex flex-row flex-wrap\">\n          <span class=\"badge cursor-pointer mr-1 mb-1\" @click=\"color = ''\">Follow theme</span>\n          <span v-for=\"c in colors\" class=\"badge cursor-pointer mr-1 mb-1\" :style=\"`background-color: ${c.color}`\" @click=\"color = c.color\" >{{ c.name }}</span>\n        </div>\n    </template>\n  </ModalComponent>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useLinksStore } from '@/stores/links'\nimport { Link } from '~~/types/types'\n\nconst groups = ['Productivity', 'School', 'Work', 'Home', 'Entertainment', 'Other']\nconst colors = [\n  {\n    name: 'Red',\n    color: '#dc2626'\n  },\n  {\n    name: 'Blue',\n    color: '#2563eb'\n  },\n  {\n    name: 'Green',\n    color: '#059669'\n  },\n  {\n    name: 'Yellow',\n    color: '#fbbf24'\n  },\n  {\n    name: 'Purple',\n    color: '#8b5cf6'\n  },\n  {\n    name: 'Pink',\n    color: '#ec4899'\n  },\n  {\n    name: 'Gray',\n    color: '#6b7280'\n  },\n  {\n    name: 'Black',\n    color: '#111827'\n  }\n]\n\nconst { link, onClose } = defineProps<{\n  link: Link\n  onClose: () => void\n}>()\n\nconst store = useLinksStore()\nconst name = ref<string>(link.name)\nconst url = ref<string>(link.url)\nconst color = ref<string>(link.color)\nconst group = ref<string>(link.group)\n\nconst saveLink = () => {\n  const existingLink = store.links.find((l: Link) => l.name === link.name)\n  if(existingLink) {\n    const l: Link = {\n      'name': name.value,\n      'url': url.value,\n      'color': color.value,\n      'group': group.value !== '' ? group.value : 'Other'\n    }\n    store.editLink(link, l)\n  } \n  onClose()\n}\n</script>","<template>\n  <teleport to='body'>\n    <div class=\"fixed w-screen h-screen top-0 left-0\"></div>\n    <div ref=\"target\" class=\"bg-transparent rounded-xl shadow fixed top-0 left-0 flex flex-col text-start items-start\" :style=\"pos\">\n      <button class=\"[&:nth-child(1)]:rounded-b-none [&:last-child]:rounded-t-none btn btn-sm bg-neutral hover:bg-neutral-focus text-base text-start flex-1 w-32 justify-start rounded-xl\" v-for=\"a in actions\" :key=\"a.name\" @click=\"a.fn\">{{ a.name }}</button>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ContextAction } from '~~/types/types'\n\nconst target = ref(null)\n\nconst { right, width: elWidth } = useElementBounding(target)\nconst { width: screenWidth } = useWindowSize()\n\nconst props = defineProps<{\n  x?: number\n  y?: number\n  actions: ContextAction[]\n}>()\n\nconst pos = computed(() => {\n  return {\n    top: props.y + 'px',\n    left: props.x + 'px'\n  }\n})\n\nonMounted(() => {\n  if(right.value > screenWidth.value) {\n    target.value.setAttribute('style', `top: ${props.y}px; left: ${props.x - elWidth.value}px`)\n  }\n})\n\nconst emit = defineEmits<{\n  (e: 'close'): void\n}>()\n\nonClickOutside(target, () => emit('close'))\n\n</script>","<template>\n  <div>\n    <nuxt-link :to=\"link.url\" v-if=\"!edit\" @contextmenu=\"openContext($event)\">\n      <div class=\"whitespace-nowrap flex items-center group badge bg-primary p-4 m-1 text-center border-0 text-white cursor-pointer hover:opacity-80 overflow-hidden\" :style=\"style\">\n        {{ link.name }}\n        <span class=\"hidden group-hover:flex ml-2 items-center\">\n          <Icon name=\"ei:external-link\" />\n        </span>\n      </div>\n    </nuxt-link>\n    <EditLinkModal v-if=\"editSelf\" :link=\"link\" :onClose=\"closeModal\" />\n    <ContextMenu v-if=\"contextOpen\" :x=\"posX\" :y=\"posY\" @close=\"contextOpen = false\" :actions=\"actions\"/>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useSettingsStore } from '@/stores/settings'\nimport { useLinksStore } from '@/stores/links'\nimport { ContextAction, Link } from '~~/types/types'\nimport { useMouse } from '@vueuse/core'\n\nconst { x, y } = useMouse()\n\nconst posX = ref(0)\nconst posY = ref(0)\nconst linkStore = useLinksStore()\nconst editSelf = ref(false)\nconst edit = ref(false)\nconst contextOpen = ref(false)\n\nconst actions: ContextAction[] = [\n  {\n    name: 'Edit',\n    fn: () => editSelf.value = true\n  },\n  {\n    name: 'Remove',\n    fn: () => linkStore.removeLinkByName(link.name)\n  }\n]\n\nconst closeModal = () => {\n  editSelf.value = false\n}\n\nconst openContext = (e: MouseEvent) => {\n  e.preventDefault()\n  posX.value = x.value\n  posY.value = y.value\n  contextOpen.value = true\n}\n\nconst { link } = defineProps<{\n  link: Link\n}>()\n\nconst style = computed(() => {\n  if(link.color !== '' && link.color !== undefined && link.color !== null) {\n    return {\n      backgroundColor: link.color\n    }\n  }\n  return {\n    \n  }\n})\n\n</script>","export default \"__VITE_ASSET__d89dcfe5__\"","<template>\n  <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n    <div class=\"bg-neutral rounded-xl p-4 flex flex-row space-x-4\" v-for=\"s in sessions\" :key=\"s.id\" :style=\"`background: linear-gradient( rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8) ), url(${plexURL + s.art + '?X-Plex-Token=' + plexToken}); background-size: cover;`\">\n      <img src=\"~/assets/plex.jpg\" alt=\"\" class=\"w-12 h-12\">\n      <div class=\"flex flex-col text-white\">\n        <span class=\"text-xs\">{{s.artist}}</span>\n        <span class=\"font-bold\">{{s.title}}</span>\n        <span class=\"text-xs opacity-50\">{{s.type}}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>import { useSettingsStore } from '~~/stores/settings'\nimport { Session } from '~~/types/types'\n\nconst settingsStore = useSettingsStore()\n\nconst plexURL = ref(computed(() => settingsStore.plexURL))\nconst plexToken = ref(computed(() => settingsStore.plexToken))\nconst updateInterval = ref(computed(() => settingsStore.plexUpdateInterval * 1000))\nconst totalSessions = ref<number>(0)\nconst sessions = ref<Session[]>([])\nconst sessionsURL = ref('/status/sessions')\n\nconst getPlexData = async () => {\n  const { data } = await useFetch(plexURL.value + sessionsURL.value + '?X-Plex-Token=' + plexToken.value, {\n    initialCache: false,\n  })\n\n  if(!window.DOMParser || !data) return\n\n  const parser = new DOMParser();\n  // @ts-ignore \n  const xmlDoc = parser.parseFromString(data.value, \"text/xml\");\n  const tracks = xmlDoc.getElementsByTagName(\"Track\").length\n  const videos = xmlDoc.getElementsByTagName(\"Video\").length\n\n  totalSessions.value = tracks + videos\n\n  // Empty sessions array\n  sessions.value = []\n  let index = 0\n\n  for (let i = 0; i < tracks; i++) {\n    const artist = xmlDoc.getElementsByTagName(\"Track\")[i].getAttribute('grandparentTitle')\n    const title = xmlDoc.getElementsByTagName(\"Track\")[i].getAttribute('parentTitle')\n    const type = xmlDoc.getElementsByTagName(\"Track\")[i].getAttribute('librarySectionTitle')\n    const art = xmlDoc.getElementsByTagName(\"Track\")[i].getAttribute('parentThumb')\n    sessions.value.push({\n      id: index, \n      artist: artist, \n      title: title, \n      type: type, \n      art: art})\n    index++\n  }\n\n  for (let j = 0; j < videos; j++) {\n    const name = xmlDoc.getElementsByTagName(\"Video\")[j].getAttribute('grandparentTitle')\n    const title = xmlDoc.getElementsByTagName(\"Video\")[j].getAttribute('title')\n    const type = xmlDoc.getElementsByTagName(\"Video\")[j].getAttribute('librarySectionTitle')\n    const art = xmlDoc.getElementsByTagName(\"Video\")[j].getAttribute('art')\n    sessions.value.push({\n      id: index,\n      artist: name || '', \n      title: title, \n      type: type, \n      art: art\n    })\n    index++\n  }\n}\n\nonMounted(() => {\n  getPlexData()\n  setInterval(() => {\n    getPlexData()\n  }, updateInterval.value)\n})\n</script>","// A function that returns Good morning!, Godd Evening! or Good Night!\nexport const useGreetingText = (): string => {\n  const time = new Date().getHours() \n  if (time < 3 || time > 23) return 'Good night'\n  if (time < 12) return 'Good morning'\n  if (time < 18) return 'Good afternoon'\n  return 'Good evening'\n}\n","<template>\n  <div class=\"grid grid-cols-1 md:place-items-center justify-around md:px-24 max-w-scren h-screen\">\n    <div class=\"grid grid-cols-1 md:grid-cols-6 md:grid-rows-1 items-center gap-2 md:gap-16 py-16 xl:py-24 max-h-screen\">\n      <ImageComponent class=\"overflow-clip h-[calc(40vh)] md:h-full md:col-span-2\"/>\n      <div class=\"flex flex-col space-y-4 min-w-[calc(50%)] items-start mt-4 md:mt-0 justify-between md:col-span-4 self-start\">\n        <WeatherComponent />\n        <SearchBar v-if=\"showSearchBar\" />\n        <h1 class=\"font-bold text-4xl md:text-5xl\">{{ useGreetingText() }} {{ username }}</h1>\n        <ClockComponent v-if=\"showClock\" />\n        <DateComponent v-if=\"showDate\" />\n        <div class=\"flex flex-row overflow-x-scroll pt-2\" style=\"max-width: -webkit-fill-available;\" :key=\"store.linkChanged\">\n          <div v-for=\"c in uniqueCategories\" class=\"flex flex-col flex-wrap justify-items-start mr-4\">\n            <h1 class=\"text-xl\">{{ c }}</h1>\n            <LinkBadge v-for=\"l in links.filter(l => l.group == c)\" :key=\"l.name\" :link=\"l\" />\n          </div>\n        </div>\n        <PlexSessionsComponent class=\"mt-auto\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useLinksStore } from '@/stores/links'\nimport { useSettingsStore } from '~~/stores/settings';\nconst store = useLinksStore()\nconst settingsStore = useSettingsStore()\nconst uniqueCategories = ref(computed(() => store.getUniqueGroups))\nconst username = ref(computed(() => settingsStore.username))\nconst links = ref(computed(() => store.links))\nconst showSearchBar = ref(computed(() => settingsStore.searchbar))\nconst showDate = ref(computed(() => settingsStore.showDate))\nconst showClock = ref(computed(() => settingsStore.showClock))\n</script>\n\n<style>\n::-webkit-scrollbar {\n  width: 0px;\n}\n</style>"],"names":["getDefault","useAsyncData","args","autoKey","key","handler","options","_a","_b","_d","_c","_e","_f","nuxt","useNuxtApp","useInitialCache","ref","_h","_g","_i","asyncData","opts","promise","resolve","reject","err","result","pick","error","unref","initialFetch","onServerPrefetch","asyncDataPromise","obj","keys","newObj","useFetch","request","arg1","arg2","_key","_request","computed","r","server","lazy","defaultFn","transform","watch","initialCache","immediate","fetchOptions","_fetchOptions","_asyncDataOptions","controller","images","store","useSettingsStore","getImageOrRandom","image","loading","imageOpacity","weatherStore","useWeatherStore","token","lat","lon","weatherData","iconURL","loaded","getWeather","url","data","input","search","searchGoogle","e","hours","minutes","seconds","now","_hours","_minutes","_seconds","dateRef","formatDate","today","weekDay","day","dateString","groups","colors","useLinksStore","name","link","color","group","saveLink","l","onClose","target","useElementBounding","useWindowSize","pos","props","onClickOutside","emit","x","y","useMouse","posX","posY","linkStore","editSelf","edit","contextOpen","actions","closeModal","openContext","style","_imports_0","settingsStore","plexURL","plexToken","sessions","useGreetingText","time","uniqueCategories","username","links","showSearchBar","showDate","showClock"],"mappings":"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"}